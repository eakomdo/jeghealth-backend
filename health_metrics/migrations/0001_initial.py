# Generated by Django 4.2.7 on 2025-07-24 12:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('iot_devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthMetricTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('blood_pressure', 'Blood Pressure'), ('heart_rate', 'Heart Rate'), ('weight', 'Weight'), ('blood_sugar', 'Blood Sugar'), ('temperature', 'Temperature'), ('oxygen_saturation', 'Oxygen Saturation'), ('steps', 'Steps'), ('sleep_hours', 'Sleep Hours'), ('calories_burned', 'Calories Burned'), ('body_fat_percentage', 'Body Fat Percentage'), ('muscle_mass', 'Muscle Mass'), ('bmi', 'BMI')], max_length=20, verbose_name='Metric Type')),
                ('target_value', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Target Value')),
                ('target_unit', models.CharField(choices=[('mmHg', 'mmHg'), ('bpm', 'bpm'), ('kg', 'kg'), ('lbs', 'lbs'), ('mg/dL', 'mg/dL'), ('mmol/L', 'mmol/L'), ('°C', '°C'), ('°F', '°F'), ('%', '%'), ('steps', 'steps'), ('hours', 'hours'), ('calories', 'calories'), ('kg/m²', 'kg/m²')], max_length=10, verbose_name='Target Unit')),
                ('target_systolic', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)], verbose_name='Target Systolic')),
                ('target_diastolic', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Target Diastolic')),
                ('target_type', models.CharField(choices=[('MAINTAIN', 'Maintain'), ('INCREASE', 'Increase'), ('DECREASE', 'Decrease'), ('RANGE', 'Stay in Range')], default='MAINTAIN', max_length=10, verbose_name='Target Type')),
                ('min_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Minimum Value')),
                ('max_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maximum Value')),
                ('target_date', models.DateField(blank=True, help_text='When to achieve this target', null=True, verbose_name='Target Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this target', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_targets', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Health Metric Target',
                'verbose_name_plural': 'Health Metric Targets',
                'db_table': 'health_metrics_healthmetrictarget',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'metric_type')},
            },
        ),
        migrations.CreateModel(
            name='HealthMetricSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('blood_pressure', 'Blood Pressure'), ('heart_rate', 'Heart Rate'), ('weight', 'Weight'), ('blood_sugar', 'Blood Sugar'), ('temperature', 'Temperature'), ('oxygen_saturation', 'Oxygen Saturation'), ('steps', 'Steps'), ('sleep_hours', 'Sleep Hours'), ('calories_burned', 'Calories Burned'), ('body_fat_percentage', 'Body Fat Percentage'), ('muscle_mass', 'Muscle Mass'), ('bmi', 'BMI')], max_length=20, verbose_name='Metric Type')),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=10, verbose_name='Period Type')),
                ('period_start', models.DateField(verbose_name='Period Start')),
                ('period_end', models.DateField(verbose_name='Period End')),
                ('reading_count', models.IntegerField(default=0, verbose_name='Reading Count')),
                ('average_value', models.FloatField(blank=True, null=True, verbose_name='Average Value')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='Minimum Value')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='Maximum Value')),
                ('avg_systolic', models.FloatField(blank=True, null=True, verbose_name='Average Systolic')),
                ('avg_diastolic', models.FloatField(blank=True, null=True, verbose_name='Average Diastolic')),
                ('trend_direction', models.CharField(choices=[('UP', 'Increasing'), ('DOWN', 'Decreasing'), ('STABLE', 'Stable'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10, verbose_name='Trend Direction')),
                ('variance', models.FloatField(blank=True, help_text='Statistical variance of readings', null=True, verbose_name='Variance')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_summaries', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Health Metric Summary',
                'verbose_name_plural': 'Health Metric Summaries',
                'db_table': 'health_metrics_healthmetricsummary',
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['user', 'metric_type', 'period_type', '-period_start'], name='health_metr_user_id_4c037a_idx')],
                'unique_together': {('user', 'metric_type', 'period_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='HealthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('blood_pressure', 'Blood Pressure'), ('heart_rate', 'Heart Rate'), ('weight', 'Weight'), ('blood_sugar', 'Blood Sugar'), ('temperature', 'Temperature'), ('oxygen_saturation', 'Oxygen Saturation'), ('steps', 'Steps'), ('sleep_hours', 'Sleep Hours'), ('calories_burned', 'Calories Burned'), ('body_fat_percentage', 'Body Fat Percentage'), ('muscle_mass', 'Muscle Mass'), ('bmi', 'BMI')], max_length=20, verbose_name='Metric Type')),
                ('value', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Value')),
                ('unit', models.CharField(choices=[('mmHg', 'mmHg'), ('bpm', 'bpm'), ('kg', 'kg'), ('lbs', 'lbs'), ('mg/dL', 'mg/dL'), ('mmol/L', 'mmol/L'), ('°C', '°C'), ('°F', '°F'), ('%', '%'), ('steps', 'steps'), ('hours', 'hours'), ('calories', 'calories'), ('kg/m²', 'kg/m²')], max_length=10, verbose_name='Unit')),
                ('systolic_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)], verbose_name='Systolic Value')),
                ('diastolic_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Diastolic Value')),
                ('recorded_at', models.DateTimeField(help_text='When this reading was taken', verbose_name='Recorded At')),
                ('is_manual_entry', models.BooleanField(default=True, help_text='Whether this was manually entered or from a device', verbose_name='Manual Entry')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this reading', verbose_name='Notes')),
                ('confidence_score', models.FloatField(default=1.0, help_text='Confidence in reading accuracy (0-1)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Confidence Score')),
                ('is_anomaly', models.BooleanField(default=False, help_text='Whether this reading is flagged as unusual', verbose_name='Is Anomaly')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='health_metrics', to='iot_devices.iotdevice', verbose_name='Device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_metrics', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Health Metric',
                'verbose_name_plural': 'Health Metrics',
                'db_table': 'health_metrics_healthmetric',
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['user', 'metric_type', '-recorded_at'], name='health_metr_user_id_d6013a_idx'), models.Index(fields=['user', '-recorded_at'], name='health_metr_user_id_aaccaa_idx'), models.Index(fields=['metric_type', '-recorded_at'], name='health_metr_metric__62e850_idx')],
            },
        ),
    ]
