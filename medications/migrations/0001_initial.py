# Generated by Django 4.2.7 on 2025-07-24 12:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(blank=True, max_length=200)),
                ('brand_name', models.CharField(blank=True, max_length=200)),
                ('form', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('liquid', 'Liquid/Syrup'), ('injection', 'Injection'), ('cream', 'Cream/Ointment'), ('inhaler', 'Inhaler'), ('drops', 'Drops'), ('patch', 'Patch'), ('suppository', 'Suppository'), ('powder', 'Powder'), ('gel', 'Gel'), ('spray', 'Spray'), ('other', 'Other')], default='tablet', max_length=20)),
                ('strength', models.CharField(help_text='e.g., 500mg, 10ml, 2.5mg/ml', max_length=100)),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('contraindications', models.TextField(blank=True)),
                ('interactions', models.TextField(blank=True)),
                ('storage_instructions', models.TextField(blank=True)),
                ('requires_prescription', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'medications',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MedicationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'medication_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserMedication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dosage', models.CharField(help_text='e.g., 1 tablet, 5ml, 2 capsules', max_length=100)),
                ('frequency', models.CharField(choices=[('once_daily', 'Once Daily'), ('twice_daily', 'Twice Daily'), ('three_times_daily', 'Three Times Daily'), ('four_times_daily', 'Four Times Daily'), ('every_4_hours', 'Every 4 Hours'), ('every_6_hours', 'Every 6 Hours'), ('every_8_hours', 'Every 8 Hours'), ('every_12_hours', 'Every 12 Hours'), ('as_needed', 'As Needed'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], default='once_daily', max_length=20)),
                ('frequency_custom', models.CharField(blank=True, help_text='Custom frequency description', max_length=200)),
                ('prescribed_by', models.CharField(blank=True, help_text="Doctor's name", max_length=200)),
                ('prescribed_date', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, help_text='Special instructions (with food, before bed, etc.)')),
                ('purpose', models.TextField(blank=True, help_text='Reason for taking this medication')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('discontinued', 'Discontinued')], default='active', max_length=20)),
                ('total_quantity', models.PositiveIntegerField(blank=True, help_text='Total pills/doses prescribed', null=True)),
                ('remaining_quantity', models.PositiveIntegerField(blank=True, help_text='Remaining pills/doses', null=True)),
                ('refills_remaining', models.PositiveIntegerField(default=0)),
                ('reminder_enabled', models.BooleanField(default=True)),
                ('reminder_times', models.JSONField(default=list, help_text="List of reminder times (e.g., ['08:00', '20:00'])")),
                ('notes', models.TextField(blank=True)),
                ('side_effects_experienced', models.TextField(blank=True)),
                ('effectiveness_rating', models.PositiveIntegerField(blank=True, help_text='Effectiveness rating from 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medications.medication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_medications',
                'ordering': ['-start_date', 'medication__name'],
            },
        ),
        migrations.CreateModel(
            name='MedicationReminder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reminder_type', models.CharField(choices=[('time', 'Time-based'), ('meal', 'Meal-based'), ('activity', 'Activity-based'), ('symptom', 'Symptom-based')], default='time', max_length=10)),
                ('reminder_time', models.TimeField(blank=True, null=True)),
                ('reminder_text', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('snooze_duration_minutes', models.PositiveIntegerField(default=5)),
                ('advance_notice_minutes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='medications.usermedication')),
            ],
            options={
                'db_table': 'medication_reminders',
                'ordering': ['reminder_time'],
            },
        ),
        migrations.CreateModel(
            name='MedicationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_time', models.DateTimeField()),
                ('actual_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('taken', 'Taken'), ('missed', 'Missed'), ('skipped', 'Skipped'), ('partial', 'Partial Dose')], default='taken', max_length=10)),
                ('dosage_taken', models.CharField(blank=True, help_text='Actual dosage taken if different', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='medications.usermedication')),
            ],
            options={
                'db_table': 'medication_logs',
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='MedicationInteraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('major', 'Major'), ('severe', 'Severe')], default='minor', max_length=10)),
                ('description', models.TextField()),
                ('recommendation', models.TextField(blank=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('dismissed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medication1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_as_med1', to='medications.medication')),
                ('medication2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_as_med2', to='medications.medication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'medication_interactions',
                'ordering': ['-severity', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='medication',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medications.medicationcategory'),
        ),
        migrations.AddIndex(
            model_name='usermedication',
            index=models.Index(fields=['user', 'status'], name='user_medica_user_id_f2b6b3_idx'),
        ),
        migrations.AddIndex(
            model_name='usermedication',
            index=models.Index(fields=['user', 'start_date'], name='user_medica_user_id_17e959_idx'),
        ),
        migrations.AddIndex(
            model_name='usermedication',
            index=models.Index(fields=['status', 'start_date'], name='user_medica_status_5c0327_idx'),
        ),
        migrations.AddIndex(
            model_name='medicationlog',
            index=models.Index(fields=['user_medication', 'scheduled_time'], name='medication__user_me_7c55e8_idx'),
        ),
        migrations.AddIndex(
            model_name='medicationlog',
            index=models.Index(fields=['status', 'scheduled_time'], name='medication__status_b5b28c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='medicationinteraction',
            unique_together={('user', 'medication1', 'medication2')},
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['name'], name='medications_name_906f5e_idx'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['generic_name'], name='medications_generic_f22126_idx'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['category'], name='medications_categor_5a89a5_idx'),
        ),
    ]
