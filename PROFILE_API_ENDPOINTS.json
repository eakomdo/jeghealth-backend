{
  "title": "JEGHealth Profile Management API Endpoints",
  "description": "Complete list of profile management endpoints for integration",
  "base_url": "http://127.0.0.1:8000",
  "api_version": "v1",
  "authentication": "Bearer Token (JWT)",
  "content_type": "application/json",
  
  "authentication_endpoints": {
    "login": {
      "method": "POST",
      "url": "http://127.0.0.1:8000/api/v1/auth/login/",
      "description": "Authenticate user and get JWT tokens",
      "authentication_required": false,
      "request_body": {
        "email": "string (required)",
        "password": "string (required)"
      },
      "response_success": {
        "status": 200,
        "body": {
          "message": "Login successful",
          "user": {
            "id": "integer",
            "email": "string",
            "username": "string",
            "first_name": "string",
            "last_name": "string",
            "phone_number": "string",
            "date_of_birth": "date",
            "profile_image": "string|null",
            "emergency_contact_name": "string",
            "emergency_contact_phone": "string|null",
            "is_email_verified": "boolean",
            "is_phone_verified": "boolean",
            "profile": "object (UserProfile)",
            "roles": "array",
            "permissions": "object",
            "created_at": "datetime",
            "updated_at": "datetime"
          },
          "tokens": {
            "access": "string (JWT access token)",
            "refresh": "string (JWT refresh token)"
          }
        }
      },
      "response_error": {
        "status": 400,
        "body": {
          "error": "Invalid email or password."
        }
      },
      "example_request": {
        "email": "user@example.com",
        "password": "securepassword123"
      }
    },
    
    "register": {
      "method": "POST",
      "url": "http://127.0.0.1:8000/api/v1/auth/register/",
      "description": "Register a new user account (basic registration)",
      "authentication_required": false,
      "request_body": {
        "email": "string (required)",
        "password": "string (required, min 8 chars)",
        "password_confirm": "string (required)",
        "first_name": "string (required)",
        "last_name": "string (required)",
        "username": "string (optional, defaults to email)",
        "phone_number": "string (optional)",
        "date_of_birth": "date (optional, YYYY-MM-DD)"
      },
      "response_success": {
        "status": 201,
        "body": {
          "message": "User registered successfully",
          "user": "object (UserWithRoles)",
          "tokens": {
            "access": "string",
            "refresh": "string"
          }
        }
      }
    },
    
    "register_with_profile": {
      "method": "POST",
      "url": "http://127.0.0.1:8000/api/v1/auth/register-with-profile/",
      "description": "Register a new user with profile data (comprehensive registration)",
      "authentication_required": false,
      "request_body": {
        "email": "string (required)",
        "password": "string (required, min 8 chars)",
        "password_confirm": "string (required)",
        "first_name": "string (required)",
        "last_name": "string (required)",
        "username": "string (optional)",
        "phone_number": "string (optional)",
        "date_of_birth": "date (optional)",
        "gender": "string (optional, M or F, case insensitive)",
        "height": "float (optional, in cm)",
        "weight": "float (optional, in kg)",
        "blood_type": "string (optional)",
        "medical_conditions": "string (optional)",
        "current_medications": "string (optional)",
        "allergies": "string (optional)"
      },
      "response_success": {
        "status": 201,
        "body": {
          "message": "User registered successfully with profile data",
          "user": "object (UserWithRoles)",
          "tokens": {
            "access": "string",
            "refresh": "string"
          }
        }
      }
    },
    
    "logout": {
      "method": "POST",
      "url": "http://127.0.0.1:8000/api/v1/auth/logout/",
      "description": "Logout user and blacklist refresh token",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "request_body": {
        "refresh_token": "string (optional)"
      },
      "response_success": {
        "status": 200,
        "body": {
          "message": "Logout successful"
        }
      }
    },
    
    "refresh_token": {
      "method": "POST",
      "url": "http://127.0.0.1:8000/api/v1/auth/token/refresh/",
      "description": "Refresh access token using refresh token",
      "authentication_required": false,
      "request_body": {
        "refresh": "string (JWT refresh token)"
      },
      "response_success": {
        "status": 200,
        "body": {
          "access": "string (new JWT access token)"
        }
      }
    }
  },
  
  "profile_management_endpoints": {
    "get_current_user": {
      "method": "GET",
      "url": "http://127.0.0.1:8000/api/v1/auth/current-user/",
      "description": "Get current authenticated user with full profile and role information",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "response_success": {
        "status": 200,
        "body": {
          "authUser": "object (complete user data)",
          "userProfile": "object (profile data)",
          "role": {
            "name": "string",
            "permissions": "object"
          }
        }
      }
    },
    
    "get_user_profile": {
      "method": "GET",
      "url": "http://127.0.0.1:8000/api/v1/auth/profile/",
      "description": "Get user's basic profile information",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "response_success": {
        "status": 200,
        "body": {
          "id": "integer",
          "email": "string",
          "username": "string",
          "first_name": "string",
          "last_name": "string",
          "phone_number": "string",
          "date_of_birth": "date",
          "profile_image": "string|null",
          "emergency_contact_name": "string",
          "emergency_contact_phone": "string|null",
          "is_email_verified": "boolean",
          "is_phone_verified": "boolean",
          "profile": "object",
          "full_name": "string",
          "created_at": "datetime",
          "updated_at": "datetime"
        }
      }
    },
    
    "update_user_profile": {
      "method": "PATCH",
      "url": "http://127.0.0.1:8000/api/v1/auth/profile/",
      "description": "Update user's basic profile information",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}",
        "Content-Type": "application/json"
      },
      "request_body": {
        "first_name": "string (optional)",
        "last_name": "string (optional)",
        "phone_number": "string (optional)",
        "date_of_birth": "date (optional, YYYY-MM-DD)",
        "profile_image": "file (optional)",
        "emergency_contact_name": "string (optional)",
        "emergency_contact_phone": "string (optional)"
      },
      "response_success": {
        "status": 200,
        "body": "Updated user object"
      }
    },
    
    "get_detailed_profile": {
      "method": "GET",
      "url": "http://127.0.0.1:8000/api/v1/auth/profile/details/",
      "description": "Get user's detailed profile (medical info, preferences)",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "response_success": {
        "status": 200,
        "body": {
          "gender": "string (M or F)",
          "height": "float (cm)",
          "weight": "float (kg)",
          "blood_type": "string",
          "medical_conditions": "string",
          "current_medications": "string",
          "allergies": "string",
          "health_goals": "string",
          "activity_level": "string",
          "email_notifications": "boolean",
          "push_notifications": "boolean",
          "health_reminders": "boolean",
          "bmi": "float (read-only, auto-calculated)",
          "created_at": "datetime",
          "updated_at": "datetime"
        }
      }
    },
    
    "update_detailed_profile": {
      "method": "PATCH",
      "url": "http://127.0.0.1:8000/api/v1/auth/profile/details/",
      "description": "Update user's detailed profile information",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}",
        "Content-Type": "application/json"
      },
      "request_body": {
        "gender": "string (M or F, case insensitive)",
        "height": "float (in centimeters)",
        "weight": "float (in kilograms)",
        "blood_type": "string (A+, A-, B+, B-, AB+, AB-, O+, O-, UNKNOWN)",
        "medical_conditions": "string",
        "current_medications": "string",
        "allergies": "string",
        "health_goals": "string",
        "activity_level": "string (SEDENTARY, LIGHT, MODERATE, ACTIVE, VERY_ACTIVE)",
        "email_notifications": "boolean",
        "push_notifications": "boolean",
        "health_reminders": "boolean"
      },
      "response_success": {
        "status": 200,
        "body": "Updated profile object with auto-calculated BMI"
      },
      "field_validations": {
        "gender": {
          "allowed_values": ["M", "F"],
          "case_insensitive": true,
          "note": "m -> M, f -> F"
        },
        "blood_type": {
          "allowed_values": ["A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-", "UNKNOWN"]
        },
        "activity_level": {
          "allowed_values": ["SEDENTARY", "LIGHT", "MODERATE", "ACTIVE", "VERY_ACTIVE"]
        },
        "bmi": {
          "read_only": true,
          "calculation": "weight (kg) / (height (m))^2",
          "note": "Automatically calculated from height and weight"
        }
      }
    },
    
    "change_password": {
      "method": "POST",
      "url": "http://127.0.0.1:8000/api/v1/auth/change-password/",
      "description": "Change user's password",
      "authentication_required": true,
      "headers": {
        "Authorization": "Bearer {access_token}",
        "Content-Type": "application/json"
      },
      "request_body": {
        "current_password": "string (required)",
        "new_password": "string (required, min 8 chars)",
        "new_password_confirm": "string (required)"
      },
      "response_success": {
        "status": 200,
        "body": {
          "message": "Password changed successfully"
        }
      },
      "response_error": {
        "status": 400,
        "body": {
          "current_password": ["Current password is incorrect."]
        }
      }
    }
  },
  
  "example_integration_flow": {
    "step_1_login": {
      "description": "Login to get access token",
      "request": {
        "method": "POST",
        "url": "http://127.0.0.1:8000/api/v1/auth/login/",
        "body": {
          "email": "user@example.com",
          "password": "userpassword"
        }
      },
      "response_extract": "tokens.access"
    },
    
    "step_2_get_profile": {
      "description": "Get current user profile",
      "request": {
        "method": "GET",
        "url": "http://127.0.0.1:8000/api/v1/auth/current-user/",
        "headers": {
          "Authorization": "Bearer {access_token_from_step_1}"
        }
      }
    },
    
    "step_3_update_profile": {
      "description": "Update detailed profile",
      "request": {
        "method": "PATCH",
        "url": "http://127.0.0.1:8000/api/v1/auth/profile/details/",
        "headers": {
          "Authorization": "Bearer {access_token_from_step_1}",
          "Content-Type": "application/json"
        },
        "body": {
          "gender": "M",
          "height": 175.0,
          "weight": 70.0,
          "activity_level": "MODERATE"
        }
      }
    }
  },
  
  "curl_examples": {
    "login": "curl -X POST http://127.0.0.1:8000/api/v1/auth/login/ -H \"Content-Type: application/json\" -d '{\"email\": \"user@example.com\", \"password\": \"password123\"}'",
    
    "get_current_user": "curl -X GET http://127.0.0.1:8000/api/v1/auth/current-user/ -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"",
    
    "get_detailed_profile": "curl -X GET http://127.0.0.1:8000/api/v1/auth/profile/details/ -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"",
    
    "update_profile": "curl -X PATCH http://127.0.0.1:8000/api/v1/auth/profile/details/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" -d '{\"gender\": \"F\", \"height\": 165.0, \"weight\": 60.0, \"activity_level\": \"ACTIVE\"}'",
    
    "change_password": "curl -X POST http://127.0.0.1:8000/api/v1/auth/change-password/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" -d '{\"current_password\": \"oldpass\", \"new_password\": \"newpass123\", \"new_password_confirm\": \"newpass123\"}'"
  },
  
  "error_handling": {
    "authentication_errors": {
      "401": "Unauthorized - Invalid or expired token",
      "403": "Forbidden - Insufficient permissions"
    },
    "validation_errors": {
      "400": "Bad Request - Invalid input data",
      "examples": {
        "invalid_gender": {
          "gender": ["Invalid gender choice. Must be either 'M' (Male) or 'F' (Female)"]
        },
        "invalid_activity_level": {
          "activity_level": ["\"INVALID\" is not a valid choice."]
        },
        "password_mismatch": {
          "non_field_errors": ["Passwords do not match."]
        }
      }
    }
  },
  
  "notes": {
    "authentication": "All profile endpoints require JWT authentication via Authorization header",
    "case_sensitivity": "Gender field accepts both uppercase and lowercase (m -> M, f -> F)",
    "bmi_calculation": "BMI is automatically calculated and cannot be manually set",
    "optional_fields": "Most profile fields are optional and can be updated incrementally",
    "timestamps": "created_at and updated_at are automatically managed by the system"
  }
}
